name: CI

on:
  push:
    branches: ["main"]
  pull_request:

jobs:
  build:
    name: Build + Test (${{ matrix.os }}, Swift ${{ matrix.swift-version }})

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            swift-version: "6.2-snapshot"
          - os: macos-15
            swift-version: "6.2-snapshot"

    steps:
      - uses: actions/checkout@v4

      - name: Cache Swift build
        uses: actions/cache@v4
        with:
          path: .build
          key: build-${{ runner.os }}-${{ matrix.swift-version }}-${{ hashFiles('Package.resolved') }}
          restore-keys: |
            build-${{ runner.os }}-${{ matrix.swift-version }}-

      - name: Install Swiftly & Swift ${{ matrix.swift-version }}
        run: |
          if swift --version 2>/dev/null | grep -q "${{ matrix.swift-version }}"; then
            echo "Swift ${{ matrix.swift-version }} already installed, skipping installation."
          else
            if [[ "$RUNNER_OS" == "Linux" ]]; then
              echo "Disabling man-db on Linux..."
              sudo apt-get remove -y man-db || true
              sudo apt-get update

              echo "Installing Swiftly on Linux..."
              curl -L https://download.swift.org/swiftly/linux/swiftly-$(uname -m).tar.gz > swiftly.tar.gz
              tar zxf swiftly.tar.gz
              ./swiftly init --verbose --assume-yes --skip-install
              source "/home/runner/.local/share/swiftly/env.sh"
            elif [[ "$RUNNER_OS" == "macOS" ]]; then
              echo "Installing Swiftly on macOS..."
              brew install swiftly
              swiftly init --verbose --assume-yes --skip-install || true
              source "$HOME/.swiftly/env.sh"
            fi

            echo "Installing Swift ${{ matrix.swift-version }}..."
            swiftly install ${{ matrix.swift-version }} --post-install-file=post-install.sh

            if [[ -f post-install.sh ]]; then
              echo "Running post-install.sh..."

              # alias apt-get to automatically run with sudo
              bash -c '
                shopt -s expand_aliases
                alias apt-get="sudo apt-get"
                source post-install.sh
              '
            fi
          fi

      - name: Build
        run: swift build -v
      - name: Test
        run: swift test

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Run SwiftLint
        uses: norio-nomura/action-swiftlint@3.2.1
        with:
          args: --strict

  format:
    name: Check formatting
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install apple/swift-format
        run: brew install swift-format
      - name: Check formatting
        run: swift-format lint -rs --color-diagnostics .
